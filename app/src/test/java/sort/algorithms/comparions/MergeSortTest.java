package sort.algorithms.comparions;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import sort.algorithms.comparions.implementations.MergeSort;

class MergeSortTest {
    @Test
    @DisplayName("should sort array with 100 elements")
    void shouldSortNumbers() {
        MergeSort mergeSort = new MergeSort();

        int[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100};
        int[] expected = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100};

        int[] result = mergeSort.sort(numbers);

        for(int number : result) {
            System.out.print(number + ", ");
        }

        Assertions.assertArrayEquals(expected, result);
    }

    @Test
    @DisplayName("should sort array with 100 random numbers")
    void shouldRandomSortNumbers() {
        MergeSort mergeSort = new MergeSort();

        int[] numbers = {783, 88156, 41541, 62729, 78598, 1847, 72336, 8102, 72543, 81672, 39708, 62544, 83786, 96612, 76324, 9527, 95467, 26844, 24056, 66997, 75826, 73191, 63272, 55921, 17909, 41505, 30592, 27191, 11908, 79489, 52247, 71898, 73373, 12016, 45440, 20351, 92007, 92596, 68074, 38138, 50401, 22263, 11121, 42788, 28966, 48998, 91532, 73700, 34973, 86037, 61940, 3520, 57270, 30803, 22717, 52354, 15649, 88947, 53105, 13106, 46117, 5182, 99831, 67855, 83342, 37997, 5699, 91570, 93679, 58634, 66874, 51319, 82196, 46272, 17499, 9525, 35121, 36602, 91282, 33441, 75870, 64680, 24029, 28468, 4665, 45594, 76220, 72880, 28970, 15241, 1806, 60510, 25684, 50832, 73651, 55953, 95784, 19330, 45028, 54619};
        int[] expected = {783, 1806, 1847, 3520, 4665, 5182, 5699, 8102, 9525, 9527, 11121, 11908, 12016, 13106, 15241, 15649, 17499, 17909, 19330, 20351, 22263, 22717, 24029, 24056, 25684, 26844, 27191, 28468, 28966, 28970, 30592, 30803, 33441, 34973, 35121, 36602, 37997, 38138, 39708, 41505, 41541, 42788, 45028, 45440, 45594, 46117, 46272, 48998, 50401, 50832, 51319, 52247, 52354, 53105, 54619, 55921, 55953, 57270, 58634, 60510, 61940, 62544, 62729, 63272, 64680, 66874, 66997, 67855, 68074, 71898, 72336, 72543, 72880, 73191, 73373, 73651, 73700, 75826, 75870, 76220, 76324, 78598, 79489, 81672, 82196, 83342, 83786, 86037, 88156, 88947, 91282, 91532, 91570, 92007, 92596, 93679, 95467, 95784, 96612, 99831};

        int[] result = mergeSort.sort(numbers);

        for(int number : result) {
            System.out.print(number + ", ");
        }

        Assertions.assertArrayEquals(expected, result);
    }


    @Test
    @DisplayName("should sort array with 100 elements reversed sorted")
    void shouldSortReversedSortedArray() {
        MergeSort mergeSort = new MergeSort();

        int[] numbers = {100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
        int[] expected = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100};

        int[] result = mergeSort.sort(numbers);

        for(int number : result) {
            System.out.print(number + ", ");
        }

        Assertions.assertArrayEquals(expected, result);
    }

}